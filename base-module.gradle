apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.squareup.sqldelight'

android {
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org\""
            buildConfigField "String", "API_KEY", "\"67dd3aa657243f43b24ad61cb9ecef6d\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org\""
            buildConfigField "String", "API_KEY", "\"67dd3aa657243f43b24ad61cb9ecef6d\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

kapt {
    correctErrorTypes = true
}

sqldelight {
    AppDatabase {
        packageName = "com.ptut.cache.database"
    }
}

dependencies {
    //AndroidX
    implementation(AndroidXFragment.fragment)
    implementation(AndroidXFragment.fragment_ktx)
    implementation(AndroidXCore.core_ktx)
    implementation(AndroidXRecyclerView.recycler_view)
    implementation(AndroidXAppCompat.app_compat)
    implementation(MaterialDesign.material)

    //Kotlin
    implementation(KotlinCoroutine.android)

    //JavaxInject
    implementation(CommonLibs.javaxInject)

    //Dagger
    implementation(Dagger.core)
    implementation(Dagger.android_core)
    implementation(Dagger.android_support)
    implementation(Dagger.compiler)
    kaptAndroidTest(Dagger.compiler)

    //Logging
    implementation (CommonLibs.timber)

    //Threetenbp
    implementation(ThreeTenBp.android)
}