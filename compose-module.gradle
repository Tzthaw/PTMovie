apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        applicationId = BuildConfig.appId
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Compose.composeCompilerVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation Compose.compiler
    implementation Compose.ui
    implementation Compose.uiToolingPreview
    implementation Compose.hiltNavigationCompose
    implementation Compose.material
    implementation Compose.runtime
    implementation Compose.navigation
    implementation Compose.viewModelCompose
    implementation Compose.activityCompose

    implementation(AndroidXAppCompat.core_ktx)
    implementation(AndroidXAppCompat.app_compat)
    implementation(AndroidXAppCompat.swipe_refresh)
    implementation(AndroidXAppCompat.constraint_layout)
    implementation(AndroidXAppCompat.recycler_view)
    implementation(AndroidXAppCompat.recycler_selection)
    implementation(MaterialDesign.material)
    implementation("androidx.navigation:navigation-fragment-ktx:2.4.2")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.5")

    kapt DaggerHilt.hiltCompiler
    implementation DaggerHilt.hiltAndroid

    testImplementation Testing.junit4 
    testImplementation Testing.junitAndroidExt 
    testImplementation Testing.truth 
    testImplementation Testing.coroutines 
    testImplementation Testing.turbine 
    testImplementation Testing.composeUiTest
    testImplementation Testing.mockk
    testImplementation Testing.mockWebServer 

    androidTestImplementation Testing.junit4 
    androidTestImplementation Testing.junitAndroidExt 
    androidTestImplementation Testing.truth 
    androidTestImplementation Testing.coroutines 
    androidTestImplementation Testing.turbine 
    androidTestImplementation Testing.composeUiTest
    androidTestImplementation Testing.mockk
    androidTestImplementation Testing.mockWebServer 
    androidTestImplementation Testing.hiltTesting

    testImplementation(AndroidJunit.junit)
    androidTestImplementation(AndroidJunit.junit_ext)
    androidTestImplementation(AndroidJunit.junit_espresso_core)

    implementation(AndroidArchNavigation.fragment_ktx)
    implementation(AndroidArchNavigation.ui_ktx)
    kapt(AndroidArchNavigation.safe_args_generator)

    // AndroidX work
    implementation(AndroidArchWork.work_runtime_ktx)
    // Inject
    implementation(Dagger.core)
    implementation(Dagger.android_core)
    implementation(Dagger.android_support)
    kapt(Dagger.compiler)
    implementation(CommonLibs.javaxInject)
    kapt(Dagger.android_processor)
    implementation(AssistedInject.annotations_dagger)
    kapt(AssistedInject.processor_dagger)

    kapt(AndroidArchLifeCycle.lifecycle_compiler)
    api(CommonLibs.timber)

    implementation(Coil.coil)
    implementation(Glide.runtime)

    implementation(CommonLibs.lottie_animation)
    implementation(AppStartup.runtime)
    debugImplementation(LeakCanary.android)
}